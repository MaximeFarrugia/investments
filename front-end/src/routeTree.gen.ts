/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UnauthRouteImport } from './routes/_unauth'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AuthIndexRouteImport } from './routes/_auth/index'
import { Route as UnauthLoginRouteImport } from './routes/_unauth/login'
import { Route as AuthAnalysisStockIndexRouteImport } from './routes/_auth/analysis/stock/index'
import { Route as AuthAccountAccount_idIndexRouteImport } from './routes/_auth/account/$account_id/index'

const UnauthRoute = UnauthRouteImport.update({
  id: '/_unauth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)
const UnauthLoginRoute = UnauthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => UnauthRoute,
} as any)
const AuthAnalysisStockIndexRoute = AuthAnalysisStockIndexRouteImport.update({
  id: '/analysis/stock/',
  path: '/analysis/stock/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAccountAccount_idIndexRoute =
  AuthAccountAccount_idIndexRouteImport.update({
    id: '/account/$account_id/',
    path: '/account/$account_id/',
    getParentRoute: () => AuthRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/login': typeof UnauthLoginRoute
  '/': typeof AuthIndexRoute
  '/account/$account_id': typeof AuthAccountAccount_idIndexRoute
  '/analysis/stock': typeof AuthAnalysisStockIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof UnauthLoginRoute
  '/': typeof AuthIndexRoute
  '/account/$account_id': typeof AuthAccountAccount_idIndexRoute
  '/analysis/stock': typeof AuthAnalysisStockIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/_unauth': typeof UnauthRouteWithChildren
  '/_unauth/login': typeof UnauthLoginRoute
  '/_auth/': typeof AuthIndexRoute
  '/_auth/account/$account_id/': typeof AuthAccountAccount_idIndexRoute
  '/_auth/analysis/stock/': typeof AuthAnalysisStockIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/' | '/account/$account_id' | '/analysis/stock'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/' | '/account/$account_id' | '/analysis/stock'
  id:
    | '__root__'
    | '/_auth'
    | '/_unauth'
    | '/_unauth/login'
    | '/_auth/'
    | '/_auth/account/$account_id/'
    | '/_auth/analysis/stock/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  UnauthRoute: typeof UnauthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_unauth': {
      id: '/_unauth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_unauth/login': {
      id: '/_unauth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof UnauthLoginRouteImport
      parentRoute: typeof UnauthRoute
    }
    '/_auth/analysis/stock/': {
      id: '/_auth/analysis/stock/'
      path: '/analysis/stock'
      fullPath: '/analysis/stock'
      preLoaderRoute: typeof AuthAnalysisStockIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/account/$account_id/': {
      id: '/_auth/account/$account_id/'
      path: '/account/$account_id'
      fullPath: '/account/$account_id'
      preLoaderRoute: typeof AuthAccountAccount_idIndexRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthIndexRoute: typeof AuthIndexRoute
  AuthAccountAccount_idIndexRoute: typeof AuthAccountAccount_idIndexRoute
  AuthAnalysisStockIndexRoute: typeof AuthAnalysisStockIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthIndexRoute: AuthIndexRoute,
  AuthAccountAccount_idIndexRoute: AuthAccountAccount_idIndexRoute,
  AuthAnalysisStockIndexRoute: AuthAnalysisStockIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface UnauthRouteChildren {
  UnauthLoginRoute: typeof UnauthLoginRoute
}

const UnauthRouteChildren: UnauthRouteChildren = {
  UnauthLoginRoute: UnauthLoginRoute,
}

const UnauthRouteWithChildren =
  UnauthRoute._addFileChildren(UnauthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  UnauthRoute: UnauthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
